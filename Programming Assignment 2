;=========================================================================
; Name & Email must be EXACTLY as in Gradescope roster!
; Name: Andrew Permatigari
; Email: 
; 
; Assignment name: Assignment 2
; Lab section: 
; TA: 
; 
; I hereby certify that I have not received assistance on this assignment,
; or used code, from ANY outside source other than the instruction team
; (apart from what was provided in the starter file).
;
;=========================================================================
.ORIG x3000			; Program begins here
;-------------
;Instructions
;-------------

;----------------------------------------------
;output prompt
;----------------------------------------------	
    LEA R0, intro			; get starting address of prompt string
    PUTS			    	; Invokes BIOS routine to output string

    AND R1, R1, #0  
    AND R2, R2, #0  

    GETC
    OUT
    ADD R1, R0, #0 

    LD R0, newline     
    OUT
    
    GETC
    OUT
    ADD R2, R0, #0 

    LD R0, newline
    OUT

    AND R0, R0, #0  
    
    ADD R0, R0, R1  
   
    OUT    
    
    LEA R0, hyphen
    PUTS
    
    
    AND R0, R0, #0  
    
    ADD R0, R0, R2  
    
    OUT            
    
    LEA R0, equals   
    PUTS    

    LD R3, HEX_30 ;using #48 (HEX_30) to change numbers into ASCII
   
    NOT R4, R3 ;NOT instruction found in "LC-3 instructions in brief" doc. Used for 1's complement in this code
    
    ADD R4, R4, #1  ;2's compliment

    ADD R1, R1, R4
    
    ADD R2, R2, R4

    AND R5, R5, #0 
    
    ADD R5, R5, R2
    
    NOT R5, R5  ; 1's comp
    
    ADD R5, R5, #1 ;2's comp
    
    ADD R5, R5, R1  

    Brzp NEGATIVE  
    LEA R0, Neg
    PUTS
    NEGATIVE

    AND R0, R0, #0  
    ADD R0, R5, #0 
    
    BRp NEG2
    ADD R0, R0, #-1  ;goes from pos value to neg
    NOT R0, R0 
    NEG2

    ADD R0, R0, R3  ;add 48 to convert to ASCII
    OUT

    LD R0, newline     
    OUT

HALT				; Stop execution of program
;------	
;Data
;------
; String to prompt user. Note: already includes terminating newline!
intro 	.STRINGZ	"ENTER two numbers (i.e '0'....'9')\n" 		; prompt string - use with LEA, followed by PUTS.
newline .FILL   x0A	; newline character - use with LD followed by OUT

HEX_30 .FILL x30 
hyphen .STRINGZ " - "
Neg .STRINGZ "-"
equals .STRINGZ " = "
;---------------	
;END of PROGRAM
;---------------	

.END
